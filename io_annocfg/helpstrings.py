from collections import ChainMap
shader_info =  {
        'ABSOLUTE_TERRAIN_ADAPTION':["Terrain adaption is absolute (model_cutout.fx): Vertices are absolutely adapted to the exact terrain height. Note: Needs 'Adjust to terrain height' to be enabled. [type=bool, default=false]", "Terrain adaption is absolute (model_materials.fxh): Vertices are absolutely adapted to the exact terrain height. Note: Needs 'Adjust to terrain height' to be enabled. [type=bool, default=false]"],
        'ADJUST_TO_TERRAIN_HEIGHT':['Adjust to terrain height (cloth.fx): Every vertex position is adjusted according to the terrain height [default=false]', 'Adjust to terrain height (model_lowpoly.fx): Every vertex position is adjusted according to the terrain height [default=false]', 'Adjust to terrain height (model_materials.fxh): Every vertex position is adjusted according to the terrain height [default=false]'],
        'ALPHA_BLEND_ENABLED':["Alpha Blending (model_materials.fxh): Enables alpha blending. The diffuse texture's alpha channel specifies the opacity per pixel (alpha ref is disabled in this case). [type=bool, default=false]"],
        'ARCTIC_SHADING_ENABLED':["Arctic Shading (decal_terrain.fx): Enables arctic shading parameters. Use this for decals that will be placed on terrain with arctic shading. Note that this most prominently affects gloss: Instead of a single gloss value, 'icyness' and 'snowness' are baked. [type=bool, default=false]"],
        'ATMOSPHERE_REFLECTION_ENABLED':['Reflect Atmosphere (model_planet_water.fx): Enables reflection of the atmosphere [default=false]'],
        'cAdjustToTerrainHeight':['Adjust to terrain height (model_cutout.fx): Every vertex position is adjusted according to the terrain height [default=false]'],
        'cAlignOnWater':['Water align: 0=OFF | 1=Y | 2=XYZ (prop_decal.fx): Aligns the vertices on the water triangles, 0=OFF, 1=Y only, 2=XYZ [min=0, max=2, step=1, default=2]'],
        'cAlignToTerrainNormal':["Align to Terrain Normal (prop_plant.fx): Rotates the mesh's vertices to align to the terrain normal (for props that are flagged with 'Adapt Terrain Height') [type=bool, default=false]", "Align Vertices to Terrain Normal (prop_terrain.fx): Rotates the mesh's vertices to align to the terrain normal (for props that are flagged with 'Adapt Terrain Height') [type=bool, default=false]", 'Align to Terrain Normal (prop_terrain_object.fxh): Offsets the mesh along the terrain normal (instead of simply up/down). Especially on cliffs this makes a difference! [type=bool, default=false]'],
        'cAlphaPower':['Alpha Power (model_video.fx): Alpha Power [min=0.0, max=4.0, default=1.0]'],
        'cAlphaRef':['Alpha Ref (cloth.fx): Which alpha results in discarding of pixels? [min=0.0, max=1.0, default=0.1]', 'Alpha Ref (model_frame_cycle.fx): Which alpha results in discarding of pixels? [min=0.0, max=1.0, default=0.0]', 'Alpha Ref (prop_decal_detail.fx): Which alpha results in discarding of pixels? [min=0.01, max=0.99, default=0.1]', 'Alpha Ref (prop_plant.fx): Which alpha results in discarding of pixels? [min=0.01, max=0.99, default=0.3]', 'Alpha Ref (prop_terrain_object.fxh): Which alpha results in discarding of pixels? [min=0.01, max=0.99, default=0.3]'],
        'cBaseReflectivity':["Reflectivity (model_water.fx): The water surface's reflectivity. This controls the mix of reflection vs. refraction. Note that the shader also adds a simple Fresnel effect: At grazing angles the water surface is always 100% reflective. [min=0.0, max=1.0, default=0.6]"],
        'cBlendDuration':["Blend Duration (model_frame_cycle.fx): Duration of the blending animation when switching to the next frame (in seconds). Must be less than 'Frame Duration'! [min=0.05, max=3.0, default=0.5]"],
        'cBoostTerrainTinting':['Boost Terrain Tinting (prop_plant.fx): Applies a contrast filter to the terrain tint color [type=bool, default=true]'],
        'cBrightness':['Brightness (model_video.fx): Brightness [min=0.0, max=4.0, default=1.0]'],
        'cClothDiffuseTex':['Diffuse + Alpha Texture (cloth.fx): Diffuse Color []'],
        'cClothDyeMask':["Dye Mask Texture (cloth.fx): A gray mask that specifies the model's areas where e.g. the player color is shown. [define=DYE_MASK_ENABLED]"],
        'cClothNormalTex':['Normal + Gloss Texture (cloth.fx): Normal XY and Glossiness in alpha [define=NORMAL_ENABLED]'],
        'cClothRippleTex':['Ripple Texture (cloth.fx): The texture used for the wind ripple effect [define=RIPPLES_ENABLED]'],
        'cCloudAnimationSpeed':['Cloud Animation Speed (model_planet.fx): Cloud animation speed [min=0.0, max=1.0, default=0.5, define=CLOUDS_ENABLED]'],
        'cCloudHeightTex':['Height Texture (model_planet.fx): Cloud height texture with different heights for each channel (RGBA) [default="data/graphics/effects/default_model_transparent_diff.psd", define=CLOUDS_ENABLED]'],
        'cCloudLightingDepth':['Cloud Lighting Depth (model_planet.fx): How deep (step-size) are clouds lighted [min=0.1, max=4.0, default=1.0, define=CLOUDS_ENABLED]'],
        'cCloudLightingFalloff':['Cloud Lighting Falloff (model_planet.fx): Falloff of the cloud translucency lighting, i.e. the density of clouds [min=0.1, max=1.0, default=0.825, define=CLOUDS_ENABLED]'],
        'cCloudLightingIntensity':['Cloud Lighting Intensity (model_planet.fx): Intensity of cloud lighting [min=0.1, max=2.0, default=1.0, define=CLOUDS_ENABLED]'],
        'cCloudLightingPuffynessFalloff':['Cloud Lighting Puffyness Falloff (model_planet.fx): How fast puffy clouds fall back to their texture details [min=0.1, max=1.0, default=0.85, define=CLOUDS_ENABLED]'],
        'cCloudMovementSpeed':['Cloud Movement Speed (model_planet.fx): Cloud movement speed [min=0.1, max=4.0, default=1, define=CLOUDS_ENABLED]'],
        'cCloudReflectParallax':['Cloud Reflection Parallax (model_planet_water.fx): Parallax offset used for the cloud reflections [min=0.0, max=0.2, default=0.05]'],
        'cCloudsHeight':['Clouds Height (model_planet.fx): Clouds Height [min=0.0, max=5.0, default=1.0, define=CLOUDS_ENABLED]'],
        'cCloudSpeed':['Cloud Speed (model_planet_water.fx): Texture scroll speed for the reflected cloud texture [min=0.1, max=4.0, default=1]'],
        'cCloudTexScale':['Cloud Scale (model_planet_water.fx): Scale of the clouds texture [min=0.5, max=4.0, default=1.0]'],
        'cCloudTintColor':['Cloud Tint Color (model_planet.fx): Cloud tint color [min=color(0.0), max=color(1.0), default=color(1.0), define=CLOUDS_ENABLED]'],
        'cDepthBias':['Depth bias (prop_decal.fx): Depth bias used to eliminate z-fighting of polygons [min=0.0, max=1.0, default=0.1]'],
        'cDiffuseColor':['Diffuse Color (cloth.fx): Diffuse Color [min=color(0.0), max=color(2.0), default=color(1.0)]', 'Diffuse Color (decal_terrain.fx): Diffuse Color [min=color(0.0), max=color(2.0), default=color(1.0)]', 'Diffuse Color (model_frame_cycle.fx): Diffuse Color [min=color(0.0), max=color(4.0), default=color(1.0)]', 'Diffuse Color (model_lowpoly.fx): Diffuse Color [min=color(0.0), max=color(2.0), default=color(0.6)]', 'Diffuse Color (model_planet_water.fx): Diffuse color [min=color(0.0), max=color(1.0), default=color(1.0)]', 'Diffuse Color (prop_decal.fx): Diffuse Color [min=color(0.0), max=color(2.0), default=color(1.0)]', 'Diffuse Color (prop_decal_detail.fx): Diffuse Color [min=color(0.0), max=color(2.0), default=color(1.0)]', 'Diffuse Color (prop_plant.fx): Diffuse Color [min=color(0.0), max=color(2.0), default=color(1.0)]', 'Diffuse Color (model_materials.fxh): Diffuse Color [min=color(0.0), max=color(2.0), default=color(1.0)]'],
        'cDiffuseOpacity':["Diffuse Opacity (decal_terrain.fx): Opacity of the diffuse texture. Lower this value to bake decal's normal map onto the terrain without modifying terrain's albedo. [min=0.0, max=1.0, default=1.0]"],
        'cDiffuseTex':['Diffuse Texture File (model_planet_water.fx): Diffuse texture [default="data/graphics/effects/default_model_diffuse.png"]'],
        'cDisplacementScale':['Displacement scale (model_materials.fxh): The maximum displacement distance (Positive and negative). [min=0.0, max=0.3, default=0.1]'],
        'cDyeMask':["Dye Mask Texture (model_materials.fxh): A gray mask that specifies the model's areas where e.g. the player color is shown. [define=DYE_MASK_ENABLED]"],
        'cEmissiveColor':['Emissive Color (model_materials.fxh): Emitted Color [min=color(0.0), max=color(4.0), default=color(2.0), define=GLOW_ENABLED]'],
        'cEnvironmentBoundingBox':['Env Bounding Box (model_materials.fxh): Bounding box of the environment map [min=float4(-16.0, -16.0, -16.0, 0.01), max=float4( 16.0,  16.0,  16.0, 64.0), default=float4(  0.0,   0.0,   0.0,  4.0)]'],
        'cFlowNormalIntensity':["Normal Intensity (model_water.fx): Controls the normal map's intensity. [min=0.0, max=3.0, default=1.0]"],
        'cFlowSpeed':["Flow Speed (model_water.fx): Controls the water flow speed, additional to the flow map's red/green channels. [min=0.01, max=1.00, default=0.25, define=FLOW_MAP_ENABLED]"],
        'cFoamDistortIntensity':["Foam Distortion (model_planet_water.fx): Controls the intensity of the foam texture's distortion [min=0.0, max=0.1, default=0.02]"],
        'cFoamDistortSpeed':["Foam Distortion Speed (model_planet_water.fx): Controls the speed of the foam texture's distortion [min=0.0, max=0.2, default=0.05]"],
        'cFoamMaskTex':['Foam Mask File (model_planet_water.fx): Foam mask texture []'],
        'cFoamTileTex':['Foam Tile Texture File (model_planet_water.fx): Foam tile texture []'],
        'cFoamTiling':["Foam Tiling (model_planet_water.fx): Controls the foam tile texture's tiling [min=0.1, max=10.0, default=1.0]"],
        'cFrameDuration':['Frame Duration (model_frame_cycle.fx): Number of seconds a frame is shown until it switches to the next frame [min=0.05, max=20.0, default=3.0]'],
        'cGlassReflectivity':['Reflectivity (model_glass.fx): Base reflectivity when looking straight down perpendicularly on the glass surface (aka. fresnel F0 term) [min=0.0, max=1.0, default=0.1]'],
        'cGlossiness':['Glossiness (prop_decal_detail.fx):  [min=0.0, max=1.0, step=0.01, default=0.0]', 'Glossiness (prop_terrain_object.fxh):  [min=0.0, max=1.0, step=0.01, default=0.0]'],
        'cGlossinessFactor':['Gloss Factor (cloth.fx): Multiplies Glossiness from texture [min=0.01, max=2.0, default=0.5]', "Gloss Factor (decal_terrain.fx): Glossiness factor. If a glossiness mask is specified (normal map's alpha channel), this slider modifies it. Otherwise this slider defines the decal's overall glossiness. NOTE: THIS SLIDER HAS NO EFFECT WHEN ICE/SNOW IS ENABLED! [min=0.0, max=2.0, default=0.0]", "Glossiness (model_lowpoly.fx): The material's glossiness (0.0 = rough, 1.0 = smooth) [min=0.0, max=1.0, default=0.0]", 'Gloss Factor (model_planet_water.fx): Multiplies Glossiness from texture [min=0.0, max=2.0, default=1.0]', 'Gloss Factor (prop_decal.fx): Multiplies Glossiness from texture [min=0.01, max=2.0, default=0.50]', 'Gloss Factor (model_materials.fxh): Multiplies Glossiness from texture [min=0.0, max=2.0, default=1.0]'],
        'cGlow':['Glow (model_lowpoly.fx): Self-illumination [min=0.0, max=4.0, default=0.0]'],
        'cHeightFactor':['Height Factor (decal_terrain.fx): If a height map is specified, this slider modifies it. [min=0.0, max=2.0, default=1.0]'],
        'cHeightMap':['Height Texture (decal_terrain.fx): Height texture (for parallax mapping) [default="data/graphics/effects/default_height.png", define=HEIGHT_MAP_ENABLED]', 'Height Map Texture (model_materials.fxh): A Height map which can contain fine surface details. [default="data/graphics/effects/default_height.png", define=HEIGHT_MAP_ENABLED]'],
        'cHorizonColor':['Horizon Color (model_planet_water.fx): Atmosphere color at horizon (for sky reflection) [min=color(0.0), max=color(1.0), default=color(0.5, 0.8, 1.0)]'],
        'cIcyness':["Icyness (decal_terrain.fx): Defines how icy this material is (same as terrain materials' icyness, specified in spec texture's red channel) [min=0.0, max=1.0, default=0.0, define=ICE_SNOW_ENABLED]"],
        'cImpostorAtlas0':['Diffuse + Alpha Atlas (model_impostor.fx): Diffuse + Alpha Atlas Texture [default=""]'],
        'cImpostorAtlas1':['Normal + Depth Atlas (model_impostor.fx): Normal + Depth Atlas Texture [default=""]'],
        'CLOUDS_ENABLED':['Clouds Enabled (model_planet.fx): Enables the planet clouds [type=bool, default=true]', 'Cloud Texture (model_planet_water.fx): Enables the cloud texture for reflections [default=false]'],
        'cMaxCloudLightingPuffyness':['Max Cloud Lighting Puffyness (model_planet.fx): Maximum puffyness (mipmap-level) of clouds [min=0.1, max=2.0, default=1.0, define=CLOUDS_ENABLED]'],
        'cMaxDisplacement':['Max Displacement (prop_decal_detail.fx): Must match value in decal material. [min=0.0, max=0.5, default=0.1]'],
        'cMetallicLowPoly':['Metallicity (model_lowpoly.fx): Is this material a dielectric (0.0, like plastic, concrete, wood) or a metal (1.0). Affects reflection. [min=0.0, max=1.0, default=0.0]'],
        'cModelDiffTex':['Diffuse + Alpha Texture (decal_terrain.fx): Diffuse Color and Alpha [default="data/graphics/effects/default_model_diffuse.png"]', 'Diffuse + Alpha Texture (model_frame_cycle.fx): Diffuse Color and Alpha [//define=DIFFUSE_ENABLED]', 'Diffuse + Alpha Texture (model_video.fx): Diffuse Color and Alpha [//define=DIFFUSE_ENABLED]', 'Diffuse + Alpha Texture (model_materials.fxh): Diffuse Color and Alpha. Alpha is used for alpha-ref (erasing pixels with low alpha), except for some other shaders. Here alpha is used to increase opacity (a=0 -> take opacity. a=1 -> opacity = 1) [default="data/graphics/effects/default_model_diffuse.png", define=DIFFUSE_ENABLED]'],
        'cModelMetallicTex':['Metallic Texture (functions_pbr.fxh): Is this material a dielectric (0.0, like plastic, concrete, wood) or a metal (1.0). Affects reflection. Alpha channel specifies ambient occlusion (AO). Bonus: Colors in this texture tint the reflection (the metallicity is defined by the texture\'s luma in this case). [default="data/graphics/effects/default_model_mask.png", define=METALLIC_TEX_ENABLED]'],
        'cModelNormalTex':['Normal + Gloss Texture (decal_terrain.fx): Normal XY and Glossiness in alpha [default="data/graphics/effects/default_normal.png", define=NORMAL_ENABLED]', 'Normal + Glow + Gloss Texture (model_materials.fxh): Normal XY, Glow in B and Glossiness in alpha [default="data/graphics/effects/default_model_normal.png", define=NORMAL_ENABLED]'],
        'cNightGlowIntensity':['Night-Glow Intensity (model_planet.fx): Intensity of the night-light glow [min=0.0, max=10.0, default=0.33, define=PLANET_ENABLED]'],
        'cNightGlowMap':['Night Glow Texture (model_materials.fxh): Additional glow map that is only applied during night. Only uses the R channel. [define=NIGHT_GLOW_ENABLED]'],
        'cNormalTex':['Normal Texture File (model_planet_water.fx): Normal texture (RG channels contain the normal, alpha channel contains glossiness) [default="data/graphics/effects/default_model_normal.png"]'],
        'cNumFrames':['Number of Frames (model_frame_cycle.fx): Total number of frames in the texture [min=1, max=20, default=1]'],
        'cOpacity':['Opacity (model_frame_cycle.fx): How opaque is the object [min=0.0, max=1.0, default=1.0]', 'CAUTION (model_planet.fx): DO NOT TOUCH! Controls whether the whole planet is rendered in the opaque or transparent pass. [min=0.0, max=1.0, default=1.0]', 'Opacity (model_planet_water.fx): How opaque is the object [min=0.0, max=0.99, default=0.99]', 'Opacity (model_video.fx): How opaque is the object [min=0.0, max=1.0, default=1.0]', 'Opacity (prop_decal.fx): How opaque is the object [min=0.0, max=1.0, default=1.0]', 'Opacity (model_materials.fxh): How opaque is the object [min=0.0, max=1.0, default=1.0]'],
        'cParallaxScale':['Parallax/Self-Shadow Scale (model_materials.fxh): The scale for parallax mapping and self shadowing [min=0.0, max=6.0, default=1.0]'],
        'cParallaxStrength':['Parallax Strength (model_planet.fx): Parallax strength [min=0.0, max=1.0, default=0.1, define=PARALLAX_ENABLED]'],
        'cPlanetCloudTex':['Cloud Texture File (model_planet_water.fx): Cloud texture for reflections []'],
        'cPlanetDayDiffTex':['Diffuse Texture Day (model_planet.fx): Diffuse color on sun-lit side [default="data/graphics/effects/default_model_diffuse.png", define=PLANET_ENABLED]'],
        'cPlanetDistance':['Planet Distance (model_planet.fx): Planet distance [min=0, max=1000, default=150, define=PARALLAX_ENABLED]'],
        'cPlanetHeight':['Height Texture (model_planet.fx): Planet height for self-shadowing (e.g. mountains) [default="data/graphics/effects/default_model_diffuse.png", define=PLANET_ENABLED]'],
        'cPlanetNightDiffTex':['Night-Glow Texture (model_planet.fx): Glow (RGB) for lights during night [default="data/graphics/effects/default_model_diffuse.png", define=PLANET_ENABLED]'],
        'cPlanetNormalGloss':['Normal + Gloss Texture (model_planet.fx): Planet normals (RGB) and gloss (A) [default="data/graphics/effects/default_model_normal.png", define=PLANET_ENABLED]'],
        'cPlanetTintColor':['Planet Tint Color (model_planet.fx): Planet tint color [min=color(0.0), max=color(1.0), default=color(1.0), define=PLANET_ENABLED]'],
        'cPropDiffuseTex':['Diffuse + Alpha (prop_decal.fx): Diffuse Color []', 'Diffuse + Alpha (prop_decal_detail.fx): Diffuse Color [default="data/graphics/effects/default_model_diffuse.png"]', 'Diffuse + Alpha (prop_terrain_object.fxh): Diffuse Color [default="data/graphics/effects/default_model_diffuse.png"]'],
        'cPropNormalTex':['Normal + Glow + Gloss (prop_decal.fx): Normal XY and Glossiness in alpha []'],
        'cPropTintIntensity':['Prop Tint Intensity (prop_plant.fx): Controls how strongly the prop tint map affects this prop [min=0.0, max=1.0, step=0.01, default=1.0]'],
        'cPropTintTiling':['Prop Tint Tiling (prop_plant.fx): Tiling factor for prop tinting [min=0.1, max=10.0, step=0.01, default=1.0]'],
        'cRimColor':['Rim color (cloth.fx): Color of the rim effect (faded-in when looking parallel to the surface for a silk-like effect) [min=color(0.0), max=color(1.0), default=color(1.0)]'],
        'cRimIntensity':["Rim Intensity (cloth.fx): Controls the rim effect's intensity (fade to rim color when looking parallel to the surface for a silk-like effect) [min=0.0, max=2.0, default=1.0]"],
        'cRippleNormalIntensity':["Ripple Normal Intensity (cloth.fx): Controls the wind ripples' normal mapping intensity [min=0.01, max=3.0, default=0.2, define=RIPPLES_ENABLED]"],
        'cRippleSpeed':["Ripple Speed (cloth.fx): Controls the wind ripple texture's movement speed [min=0.1, max=10.0, default=1.0, define=RIPPLES_ENABLED]"],
        'cRippleTiling':["Ripple Tiling (cloth.fx): Controls the wind ripple texture's tiling size [min=0.1, max=1.0, default=0.5, define=RIPPLES_ENABLED]"],
        'cRooftopSnow':['Rooftop snow (functions_snow.fxh): Additional snow on rooftops [min=0.0, max=1.0, default=0.0]'],
        'cSeparateAOTex':['Separate AO Texture (functions_pbr.fxh): A separate ambient occlusion texture. Metallicity texture must be enabled. NOTE: The mesh needs a second UV channel! [default="data/graphics/effects/default_model_mask.png", define=SEPARATE_AO_TEXTURE]'],
        'cShadowAlphaRef':['Shadow Alpha Ref (prop_plant.fx): Threshold for shadow-casting pixels [min=0.01, max=0.99, default=0.3]'],
        'cShallowFade':['Shallow Fade (model_planet_water.fx): How much to fade on shallow water [min=0.0, max=1.0, default=0.8]'],
        'cSmallWaveTexScale':["Ocean Water Tex Scale (model_water.fx): Controls the ocean wave texture's scaling. [min=0.01, max=10.00, default=1.00, define=USE_SMALL_WAVE_TEXTURE]"],
        'cSnowDensity':['Snow density (functions_snow.fxh): The snow density of the object [min=0.0, max=1.0, default=0.0]'],
        'cSnowness':["Snowness (decal_terrain.fx): Defines how snowy this material is (same as terrain materials' snowness, specified in spec texture's green channel) [min=0.0, max=1.0, default=0.0, define=ICE_SNOW_ENABLED]"],
        'cSnowRoughness':['Snow roughness (functions_snow.fxh): Infulence the snow normals and lighting [min=0.1, max=16.0, default=6.0]'],
        'cSnowScale':['Snow scale (functions_snow.fxh): Scale factor used to scale the snow texture [min=1.0, max=5.0, default=1.0]'],
        'cSpecularColor':['Specular Color (cloth.fx): Specular Color [min=color(0.0), max=color(1.0), default=color(0.2)]', 'Specular Color (prop_decal.fx): Specular Color [min=color(0.0), max=color(20.0), default=color(1.0)]'],
        'cSunSpecAzimuthAngle':["Spec Azimuth Angle (model_planet_water.fx): The sun direction's azimuth angle (for spec only) [min=0.0, max=360.0, default=0.0, step=1.0]"],
        'cSunSpecPolarAngle':["Spec Polar Angle (model_planet_water.fx): The sun direction's polar angle (for spec only) [min=0.0, max=90.0, default=45.0, step=1.0]"],
        'cTerrainTintIntensity':['Terrain Tinting Intensity (prop_plant.fx): Controls how much the terrain tinting acts on this prop [min=0.0, max=1.0, step=0.1, default=1.0, define=cUseTerrainTinting]', 'Terrain Tinting Intensity (prop_terrain_object.fxh): Controls how much the terrain tinting acts on this object [min=0.0, max=1.0, step=0.1, default=1.0]'],
        'cTexCoordRatio':['TextureCoordinate Ratio (model_planet.fx): Texture-coordinate ratio [min=0.25, max=4.0, default=1.0, define=PLANET_ENABLED]'],
        'cTexCoordScale':['TextureCoordinate Scale (model_planet.fx): Texture-coordinate scale [min=0.5, max=4.0, default=1.0, define=PLANET_ENABLED]'],
        'cTexScrollSpeed':['Texture Scroll Speed (model_frame_cycle.fx): How fast does the texture scroll along the U or V axis (in UV pages per second) while a sequence is running [min=float2(0.0, 0.0), max=float2(10.0, 10.0), default=float2(0.0, 0.0)]', 'Texture Scroll Speed (model_materials.fxh): How fast does the texture scroll along the U axis (in UV pages per second) while a sequence is running [min=-5.0, max=5.0, default=0.0]'],
        'cUseLocalEnvironmentBox':['Use Local Environment Box (model_materials.fxh): Enables/disables the local environment box for cube mapping (Env Bounding Box). When enabled, the cube map can be positioned and sized by parameters. When disabled, the shader is effectively using standard cube mapping (i.e. sampling from an infinitely large cube). [type=bool, default=true]'],
        'cUseTerrainGrit':["Use Terrain Grit (prop_decal.fx): Applies terrain's grit texture onto this model, depending on its slope [default=false]", "Use Terrain Grit (functions_pbr.fxh): Applies terrain's grit texture onto this model, depending on its slope [type=bool, default=false]"],
        'cUseTerrainTinting':["Use Terrain Tinting (prop_decal.fx): Applies terrain's luma/chroma tinting to the model [default=false]", "Use Terrain Tinting (prop_plant.fx): Applies terrain's luma/chroma tinting to the model [type=bool, default=false]", "Use Terrain Tinting (functions_pbr.fxh): Applies terrain's luma/chroma tinting to the model [type=bool, default=false]", "Use Terrain Tinting (prop_terrain_object.fxh): Applies terrain's luma/chroma tinting to the model [type=bool, default=true]"],
        'CUT_OUT_TERRAIN':['Cut out terrain (model_cutout.fx): Cut out the terrain surface [type=bool, default=true]', 'Cut out terrain (model_volume_cutout.fx): Cut out the terrain surface [type=bool, default=true]'],
        'CUT_OUT_WATER':['Cut out water (model_cutout.fx): Cut out the ocean water surface [type=bool, default=true]', 'Hide water in cut area (model_volume_cutout.fx): Hides the ocean water in the area where the terrain has been cut out [type=bool, default=true]'],
        'cVtxAnimColorTex':["Color Map (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimNormalTex':["Normal Map (model_vertex_anim.fx): (Soft Only) See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimNumFrames':["Number Of Frames (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=1, max=512, default=1, step=1, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimPaddedSizeX':["Padded Size X (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=0, max=2048, default=128, step=1, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimPaddedSizeY':["Padded Size Y (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=0, max=2048, default=128, step=1, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimPivMax':["Pivot Max (model_vertex_anim.fx): (Rigid Only) See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=-100.0, max=100.0, default=0.0, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimPivMin':["Pivot Min (model_vertex_anim.fx): (Rigid Only) See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=-100.0, max=100.0, default=0.0, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimPosMax':["Position Max (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=-100.0, max=100.0, default=0.0, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimPosMin':["Position Min (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=-100.0, max=100.0, default=0.0, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimPosTex':["Position Map (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimPosTex2':["Position Map 2 (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimRotTex':["Rotation Map (model_vertex_anim.fx): (Rigid Only) See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimSpeed':["Speed (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=0.0, max=10.0, default=0.33, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimTexSizeX':["Active Pixels X (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=0, max=2048, default=128, step=1, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cVtxAnimTexSizeY':["Active Pixels Y (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [min=0, max=2048, default=128, step=1, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'cWaterDepth':['Water Depth (model_water.fx): The perceived water depth through varying turbidity. [min=0.0, max=1.0, default=0.6]'],
        'cWaterDepthFade':['Soft Depth Fade (model_water.fx): How much the water shall fade where it is near/intersecting with geometry to hide clipping artifacts. [min=0.0, max=1.0, default=0.05]'],
        'cWaterDetailNormTex':['Water Detail Normal Map (model_water.fx): Normal map for the water detail texture [default="data/graphics/effects/default_model_normal.png", define=DETAIL_MAP_ENABLED]'],
        'cWaterDetailTex':['Water Detail Map (model_water.fx): Water detail diffuse texture [default="data/graphics/effects/default_model_transparent_diff.psd", define=DETAIL_MAP_ENABLED]'],
        'cWaterDistortion':['Refract Distortion Strength (model_water.fx): How much should the water refraction be distorted (refraction strength). [min=0.01, max=1.00, default=0.50]'],
        'cWaterFlowTex':["Water Flow Map (model_water.fx): Water flow texture. Red and green channels specify the flow speed in U and V direction. Similar to normal maps, a value of 128 specifies zero speed. Values less than 128 moves in negative direction, values greater than 128 in positive direction. The blue channel controls the normal map's intensity. The alpha channel serves as refraction mask and also controls the distortion (black = no distortion). [define=FLOW_MAP_ENABLED]"],
        'cWaterFoam':['Foam (model_water.fx): How much foam is applied depending on the water depth. [min=0.0, max=2.0, default=0.0]'],
        'cWaterTexScale':['Water Tex Scale (model_water.fx): Water texture scaling for normal (only with flow map), foam and detail map. [min=0.1, max=20.0, default=1.0]'],
        'cWaveAngle':['Angle (model_planet_water.fx): Angle of the waves [min=0.0, max=360.0, step=1.0, default=0.0]'],
        'cWaveHeightA':["Height A (model_planet_water.fx): First wave's height [min=0.0, max=1.0, default=0.5]"],
        'cWaveHeightB':["Height B (model_planet_water.fx): Second wave's height [min=0.0, max=1.0, default=0.25]"],
        'cWaveHeightC':["Height C (model_planet_water.fx): Third wave's height [min=0.0, max=1.0, default=0.125]"],
        'cWaveNoiseTex':['Wave Texture File (model_planet_water.fx): Noise texture for waves [default="data/graphics/effects/default_model_diffuse.png"]'],
        'cWaveScaleA':["Scale A (model_planet_water.fx): First wave's size [min=0.0, max=5.0, step=0.1, default=0.5]"],
        'cWaveScaleB':["Scale B (model_planet_water.fx): Second wave's size [min=0.0, max=5.0, step=0.1, default=1.0]"],
        'cWaveScaleC':["Scale C (model_planet_water.fx): Third wave's size [min=0.0, max=5.0, step=0.1, default=2.0]"],
        'cWaveSpeed':['Speed (model_planet_water.fx): Wave wind speed [min=0.0, max=1.0, default=0.1]'],
        'cWaveStretch':['Stretching (model_planet_water.fx): Width/length ratio of the waves [min=1.0, max=10.0, step=0.1, default=4.0]'],
        'cWaveTotalHeight':['Total Height (model_planet_water.fx): Total wave height [min=0.0001, max=0.2, default=0.1]'],
        'cWaveTotalScale':['Total Scale (model_planet_water.fx): Size of the waves [min=1.0, max=100.0, step=1.0, default=16.0]'],
        'cWindColorBoost':['Wind Color Boost (prop_plant.fx): Controls how strongly farm field wind affects color [min=0.0, max=10.0, step=0.1, default=3.0]', 'Wind Color Boost (prop_terrain_object.fxh): Controls how strongly farm field wind affects color [min=0.0, max=10.0, step=0.1, default=3.0]'],
        'cWindRippleMeshIntensity':["Wind Ripple Mesh Intensity (model_materials.fxh): Controls the wind ripples' intensity on the mesh vertices [min=0.01, max=1.0, default=0.2, define=WIND_RIPPLES_ENABLED]"],
        'cWindRippleNormalIntensity':["Wind Ripple Normal Intensity (model_materials.fxh): Controls the wind ripples' normal-mapped intensity [min=0.01, max=3.0, default=0.2, define=WIND_RIPPLES_ENABLED]"],
        'cWindRippleSpeed':["Wind Ripple Speed (model_materials.fxh): Controls the wind ripple texture's movement speed [min=0.1, max=10.0, default=1.0, define=WIND_RIPPLES_ENABLED]"],
        'cWindRippleTex':['Wind Ripple Texture (model_materials.fxh): The texture used for the wind ripple effect [default="data/graphics/effects/cloth/clothripple01_1404.psd", define=WIND_RIPPLES_ENABLED]'],
        'cWindRippleTiling':["Wind Ripple Tiling (model_materials.fxh): Controls the wind ripple texture's tiling size [min=0.05, max=1.0, default=0.2, define=WIND_RIPPLES_ENABLED]"],
        'cZenithColor':['Zenith Color (model_planet_water.fx): Atmosphere color at zenith (for sky reflection) [min=color(0.0), max=color(1.0), default=color(0.4, 0.4, 1.0)]'],
        'DETAIL_MAP_ENABLED':["Detail Map (model_water.fx): Enables the detail texture: An opaque texture that's put on-top of the water surface. The water surface is visible in areas where this texture's alpha channel is non-white. If flow map is active, this one is distorted too. [type=bool, default=false]"],
        'DIFFUSE_ENABLED':['Diffuse + Alpha (cloth.fx): Enables the diffuse texture [default=false]', 'Diffuse + Alpha (model_frame_cycle.fx): Enables Diffuse Texture [default=false]', 'Diffuse Texture (model_planet_water.fx): Enables the diffuse texture [default=false]', 'Diffuse + Alpha (model_video.fx): Enables Diffuse Texture [default=false]', 'Diffuse + Alpha (prop_plant.fx): Enables Diffuse Texture [type=bool, default=true]', 'Diffuse + Alpha (model_materials.fxh): Enables Diffuse Texture [type=bool, default=false]'],
        'DISABLE_PLANT_GLOSSINESS':['Disable Glossiness (prop_plant.fx): (PERFORMANCE OPTIMIZATION) Disable all reflection/specular lighting [type=bool, default=false]'],
        'DISPLACEMENT_ENABLED':["Displacement Enable (prop_decal_detail.fx): Must match value 'Height Map Enable' in decal material. [type=bool, default=false]"],
        'DOUBLE_SIDED':['Double-Sided (model_vertex_anim.fx): Renders both sides of the model, effectively disabling back-face culling. This is useful for cloth. [type=bool, default=false]', "Double-Sided (prop_plant.fx): Render every triangle's front and back face. [type=bool, default=false]", "Double-Sided (prop_terrain_object.fxh): Render every triangle's front and back face. [type=bool, default=false]"],
        'DYE_MASK_ENABLED':['Dye Mask (cloth.fx): Enables the dye mask texture [type=bool, default=false]', 'Dye Mask (model_materials.fxh): Enables the dye mask texture [type=bool, default=false]'],
        'FADE_OUT_SHADOW':["Fade out shadows (prop_plant.fx): Fade out shadows casted by this object when it's far away [type=bool, default=false]"],
        'FARM_FIELD_WIND':['Farm Field Wind (prop_plant.fx): Enables Farm Field Wind [type=bool, default=false]', 'Farm Field Wind (prop_terrain_object.fxh): Enables Farm Field Wind [type=bool, default=false]'],
        'FLOW_MAP_ENABLED':["Flow Map (model_water.fx): Enables the flow texture: Applies a flow-like moving distortion effect on the foam and (if active) the detail map and (if the ocean wave tex doesn't override it) the normal map. [type=bool, default=false]"],
        'FOAM_ENABLED':['Foam Texture (model_planet_water.fx): Enables the foam texture [default=false]'],
        'FORCE_ALPHA_BLEND':['Force Alpha Blend (prop_impostor.fx): Force alpha blending instead of alpha testing [type=bool, default=false]', 'Force Alpha Blend (prop_simple_pbr.fx): Force alpha blending instead of alpha testing [type=bool, default=false]'],
        'FRAME_BLEND_MODE':['Blend Mode (model_frame_cycle.fx): Choose a blend mode (0 = scale-in, 1 = roll-in left to right, 2 = roll-in from top-left corner, 3 = simple) [type=int, min=0, max=3, default=0]'],
        'GLOW_ENABLED':['Glow (model_materials.fxh): Enables Glow [type=bool, default=true]'],
        'HEIGHT_MAP_ENABLED':['Height (decal_terrain.fx): Enables bump mapping via height map [type=bool, default=false]', 'Height Map (model_materials.fxh): Enables surface details via height map. [type=bool, default=false]'],
        'ICE_SNOW_ENABLED':['Ice/Snow (decal_terrain.fx): Enables icyness/snowness baking. [type=bool, default=false, define=ARCTIC_SHADING_ENABLED]'],
        'INVERSE_LOGO_COLORING':["Inverse Logo Coloring (cloth.fx): Inverts the atlas logo coloring: The logo's color stays as it is and the surrounding non-logo area is dye-colored. [default=false]"],
        'LOGO_ATLAS_ENABLED':['Logo Atlas (cloth.fx): Enables texture atlas support. Note: The mesh needs a second set of UV coordinates! [type=bool, default=false]'],
        'MANUAL_SUN_SPEC_ENABLED':['Manual sun specular (model_planet_water.fx): Enables manual tweaking of the sun specular parameters [default=false]'],
        'METALLIC_TEX_ENABLED':['Metallic (functions_pbr.fxh): Enables the metallic texture [type=bool, default=false]'],
        'NIGHT_GLOW_ENABLED':['Night Glow Map (model_materials.fxh): Enables an additional glow map that is only applied during night. [type=bool, default=false]'],
        'NORMAL_ENABLED':['Normal + Gloss (cloth.fx): Enables the normal texture [type=bool, default=false]', 'Normal + Gloss (decal_terrain.fx): Enables normal mapping [type=bool, default=false]', 'Normal + Glow + Gloss (model_materials.fxh): Enables Normal Mapping [type=bool, default=false]'],
        'NORMAL_MAP_ENABLED':['Normal Map Enable (prop_decal_detail.fx): Enables Normal Mapping [type=bool, default=false]', 'Normal Map Enable (prop_plant.fx): Enables Normal Mapping [type=bool, default=false]', 'Normal Map Enable (prop_terrain_object.fxh): Enables Normal Mapping [type=bool, default=false]'],
        'PARALLAX_ENABLED':["Parallax Rendering (model_planet.fx): Enables special 'parallax-' instead of 'world-position-' rendering [type=bool, default=false]"],
        'PARALLAX_MAPPING_ENABLED':['Parallax Mapping (model_materials.fxh): Enables parallax mapping (needs a height map texture). [type=bool, default=true]'],
        'PLANET_ENABLED':['Planet Enabled (model_planet.fx): Enables the planet rendering (no clouds without planet) [type=bool, default=true]'],
        'PLANET_WATER_NORMAL_ENABLED':['Normal+Gloss Texture (model_planet_water.fx): Enables the normal/gloss texture [default=false]'],
        'PROP_TINT_ENABLED':['Prop Tinting (prop_plant.fx): Enables prop tinting (Separate from terrain tinting) [type=bool, default=false]'],
        'RIPPLES_ENABLED':['Ripples (cloth.fx): Enables the wind ripples texture. This is an additional shader-only cloth effect that mimics small cloth ripples moved by the wind. [type=bool, default=false]'],
        'SELF_SHADOWING_ENABLED':['Self Shadowing (model_materials.fxh): Enables self shadowing (needs a height map texture). [type=bool, default=false]'],
        'SEPARATE_AO_TEXTURE':['Separate AO (functions_pbr.fxh): Uses a separate ambient occlusion texture. Metallicity texture must be enabled. NOTE: The mesh needs a second UV channel! [type=bool, default=false]'],
        'SNOW_ENABLED':['Snow Enabled (functions_snow.fxh): Enables the snow [type=bool, default=false]'],
        'SNOW_MASK_ENABLED':['Snow Mask (functions_snow.fxh): Enables the snow mask texture [default=false]'],
        'TEXTURE_ATLAS_ENABLED':['Texture Atlas (model_decal.fx): Enables texture atlas support [type=bool, default=false]'],
        'USE_DISPLACEMENT_MAPPING':['Use Displacement Mapping (model_materials.fxh): Enables displacement mapping for surface details (Parallax mapping is used otherwise). [type=bool, default=false]'],
        'USE_SMALL_WAVE_TEXTURE':["Use Ocean Wave Texture (model_water.fx): Uses the engine-internal animated small-wave textures that's also used for ocean, lake and river rendering.  !!! NOTE: To see this in BobNet, you need an active ocean water !!! [type=bool, default=false]"],
        'VERTEX_COLOR_FOAM':['VertexColor Foam (model_water.fx): Enables foam distribution via vertex colors (red color controls foam: black = 0 = no foam, red = 1 = full foam) [type=bool, default=false]'],
        'VERTEX_COLORED_TERRAIN_ADAPTION':["Vertex color controls terrain adaption (model_cutout.fx): Vertex color (red channel) controls the terrain height adaption. Note: Needs 'Adjust to terrain height' to be enabled. [type=bool, default=false]", "Vertex color controls terrain adaption (model_materials.fxh): Vertex color (red channel) controls the terrain height adaption. Note: Needs 'Adjust to terrain height' to be enabled. [type=bool, default=false]"],
        'VTX_ANIM_DOUBLE_TEX':["Double Texture (Higher Precision) (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [default=false, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'VTX_ANIM_PACK_NORM':["Pack Normal (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [default=false, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'VTX_ANIM_PAD_POW_2':["Padded to Power of 2 Texture Sizes (model_vertex_anim.fx): See Houdini's documentation on its 'GameDev Vertex Animation Textures' ROP node [default=false, define=VTX_ANIMATION_TEXTURES_ENABLED]"],
        'VTX_ANIMATION_TEXTURES_ENABLED':['Enable Vertex Animation Textures (model_vertex_anim.fx): Enables vertex animation textures exported from Houdini [type=bool, default=false]'],
        'WATER_CUTOUT_ENABLED':["Water Cut-out (model_materials.fxh): If enabled: This mesh can't be covered by ocean water [type=bool, default=false]"],
        'WAVE_NOISE_TEX_ENABLED':['Wave Texture (model_planet_water.fx): Enables the wave noise texture [default=false]'],
        'WAVE_TEXTURE_USES_2ND_UVS':["Use 2nd UVs (model_planet_water.fx): Use the model's second UV channel for the waves' texture coordinates [type=bool, default=false]"],
        'WIND_RIPPLES_ENABLED':['Wind Ripples (model_materials.fxh): Enables wind ripples for a cloth-like ripple shading effect [type=bool, default=false]'],
}

custom_info = {
        'AdaptTerrainHeight':['Adjust to terrain height: Position is adjusted according to the terrain height, i.e. the object will be exactly as many units above ground as it currently is'],
        'BlenderModelID':['Will be converted to ModelID (corresponding to the index of that model in the .cfg) when exporting the file. Make sure that the referenced model is part of the same MAIN_FILE!'],
        'BlenderParticleID':['Will be converted to ParticleID when exporting the file. Make sure that the referenced particle is part of the same MAIN_FILE!'],
        'Condition':['Conditions: Condition under which the transform is active, used for a variety of things like making particles visible when the building is working. My understanding is that this value is actually a bitset, f.e. 64 stands for 01000000 and 96 stands for 01100000 (not actually 8bit, but still). Hence a conditions entry of 96 is a superset of both 32 and 64. Which condition corresponds to working/idle differs from building to building, so use existing condition codes to see which one corresponds to which. I think the <Type> 2 Tracks in the Animation Sequences have something to do with that.'],
        'Conditions':['Conditions: Condition under which the transform is active, used for a variety of things like making particles visible when the building is working. My understanding is that this value is actually a bitset, f.e. 64 stands for 01000000 and 96 stands for 01100000 (not actually 8bit, but still). Hence a conditions entry of 96 is a superset of both 32 and 64. Which condition corresponds to working/idle differs from building to building, so use existing condition codes to see which one corresponds to which. I think the <Type> 2 Tracks in the Animation Sequences have something to do with that.'],
        'Flags':['Flags (Prop): A flag of 0 is equal to not adapting to the terrain height. If one, the prop will adapt to the terrain height.'],
        'NumBonesPerVertex':["Number of bones per vertex, has to be zero for non animated models."],
        'ShaderID':["Shader ID: Determines which shader is used. 8 for normal models, 1 for decals, 0 for cloth, 5 for cutout."],
        'VariationEnabled':["Variation Enabled: If one, the game will choose one of the props from this container randomly."],
        'VertexFormat':["Vertex Format: Vertex Format of the model, has to match the exported vertex format. Valid values are (among others) P4h_N4b_G4b_B4b_T2h (normal model), P4h_N4b_G4b_B4b_T2h_I4b (animated model), P4h_N4b_G4b_B4b_T2h_I4b_W4b, P3f_N3f_G3f_T2f_T1f_T1f_T1f(decal), P3f_N3b,T2f (sail cloth), P4h (cutout)"],
}

info_by_key =  ChainMap(
    shader_info, 
    custom_info
)

def help_for_key(key):
    return '\n'.join(info_by_key.get(key, ["UNKNOWN"]))